<div class="container" style="margin-top: 50px;">
   <h1>Thùng Rác</h1>
   <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3">
      <div class="d-flex align-items-center gap-3 flex-wrap mb-0">
         <div class="form-check mb-0">
            <input class="form-check-input" type="checkbox" id="checkboxAll">
            <label class="form-check-label" for="checkboxAll">Chọn tất cả</label>
         </div>
         <select class="form-select w-auto mb-0" id="selectAction">
            <option value="" selected disabled>Chọn hành động</option>
            <option value="restore">Khôi phục</option>
            <option value="delete">Xoá vinh vien</option>
         </select>
         <form id="bulk-action-form" method="POST" action="">
            <input type="hidden" name="action" id="bulk-action-type">
            <input type="hidden" name="ids" id="bulk-action-ids">
            <button type="submit" class="btn btn-success mb-0 btn-check-all disabled">Áp dụng</button>
         </form>
      </div>
      <div>
         <a href="/course/management" class="btn btn-primary">
         Về trang quản lý khóa học
         </a>
      </div>
   </div>
   <table class="table table-hover">
      <thead>
         <tr class="text-center">
            <th scope="col"></th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Deleted At</th>
            <th scope="col">Action</th>
         </tr>
      </thead>
      <tbody>
         {{#each courses}}
         <tr class="text-center" data-id="{{_id}}">
            <td class="text-truncate">
               <div class="form-check mb-0 text-center">
                  <input class="form-check-input" type="checkbox" 
                     value="{{_id}}" 
                     name="courseCheckbox">
               </div>
            </td>
            <td class="text-truncate" style="max-width: 100px;">{{name}}</td>
            <td class="text-truncate" style="max-width: 150px;">{{description}}</td>
            <td class="text-truncate" style="max-width: 150px;">{{deletedAt}}</td>
            <td>
               <button class="btn btn-outline-success btn-restore" data-id="{{_id}}">
               <i class="fas fa-undo"></i> Restore
               </button>
               <button class="btn btn-outline-danger btn-delete" data-id="{{_id}}">
               <i class="fas fa-trash-alt"></i> Delete Permanently
               </button>
            </td>
         </tr>
         {{else}}
         <tr>
            <td colspan="5" class="text-center">
               Thùng rác trống
               <div class="mt-2">
                  <a href="/course/management" class="btn btn-primary">
                  Về trang quản lý khóa học
                  </a>
               </div>
            </td>
         </tr>
         {{/each}}
      </tbody>
   </table>
   <script>
      document.addEventListener('DOMContentLoaded', function () {
          var checkboxAll = $('#checkboxAll');
          var courseCheckboxes = $('input[name="courseCheckbox"]');
          var checkAllSubmitButton = $('.btn-check-all');
          const urlParams = new URLSearchParams(window.location.search);
      const success = urlParams.get('success');
      
      if (success === 'restored') {
      Swal.fire({
      icon: 'success',
      title: 'Đã khôi phục các khóa học!',
      showConfirmButton: false,
      timer: 2000
      });
      window.history.replaceState(null, '', '/course/trash');
      }
      
      if (success === 'deleted') {
      Swal.fire({
      icon: 'success',
      title: 'Đã xóa vĩnh viễn các khóa học!',
      showConfirmButton: false,
      timer: 2000
      });
      window.history.replaceState(null, '', '/course/trash');
      }
      
      
          // Checkbox all change event
              checkboxAll.change(function() {
                  var isChecked = $(this).prop('checked');
                  courseCheckboxes.prop('checked', isChecked);
                  renderCheckAllSubmitButton();
              }); 
      
              // Checkbox change event
              courseCheckboxes.change(function() {
                  var allChecked = courseCheckboxes.length === courseCheckboxes.filter(':checked').length;
                  checkboxAll.prop('checked', allChecked);
                  renderCheckAllSubmitButton();
              });
      
              // Check all submit button click event 
              checkAllSubmitButton.click(function (e) {
                  if ($(this).hasClass('disabled')) {
                      e.preventDefault();
                      return;
                  }
      
                  const selectedAction = $('#selectAction').val();
                  if (!selectedAction) {
                      e.preventDefault();
                      Swal.fire({
                          icon: 'warning',
                          title: 'Vui lòng chọn hành động!',
                          showConfirmButton: false,
                          timer: 2000
                      });
                      return;
                  }
      
                  const selectedIds = [];
                  $('input[name="courseCheckbox"]:checked').each(function () {
                      selectedIds.push($(this).val());
                  });
      
                  if (selectedIds.length === 0) {
                      e.preventDefault();
                      Swal.fire({
                          icon: 'warning',
                          title: 'Vui lòng chọn ít nhất 1 khóa học!',
                          showConfirmButton: false,
                          timer: 2000
                      });
                      return;
                  }
      
                  // Đưa dữ liệu vào input hidden
                  $('#bulk-action-type').val(selectedAction);
                  $('#bulk-action-ids').val(JSON.stringify(selectedIds));
      
                  // Chọn action phù hợp cho form
      const form = $('#bulk-action-form');
      if (selectedAction === 'restore') {
      form.attr('action', '/course/restore-multiple');
      form.attr('method', 'POST');
      } else if (selectedAction === 'delete') {
      form.attr('action', '/course/delete-multiple-force');
      form.attr('method', 'POST');
      }
      
              });
      
              // Render check all submit button
              function renderCheckAllSubmitButton() {
                  var checkedCount = courseCheckboxes.filter(':checked').length;
                  if (checkedCount > 0) { 
                      checkAllSubmitButton.removeClass('disabled');
                  } else {
                      checkAllSubmitButton.addClass('disabled');
                  }
              } 
      
          // Enable/disable submit button based on checkbox selection
          courseCheckboxes.on('change', function () {
              if (courseCheckboxes.filter(':checked').length > 0) {
                  checkAllSubmitButton.removeClass('disabled');
              } else {
                  checkAllSubmitButton.addClass('disabled');
              }
          });
      
          // Restore
          document.querySelectorAll('.btn-restore').forEach(function (btn) {
              btn.addEventListener('click', function () {
                  const courseId = btn.dataset.id;
                  Swal.fire({
                      title: 'Khôi phục khóa học?',
                      text: "Khóa học sẽ được đưa trở lại trang quản lý.",
                      icon: 'question',
                      showCancelButton: true,
                      confirmButtonText: 'Khôi phục',
                      cancelButtonText: 'Hủy'
                  }).then((result) => {
                      if (result.isConfirmed) {
                          axios.patch('/course/restore/' + courseId)
                              .then(() => {
                                  Swal.fire({
                                      icon: 'success',
                                      title: 'Đã khôi phục',
                                      showConfirmButton: false,
                                      timer: 1500
                                  }).then(() => {
                                      location.reload();
                                  });
                              })
                              .catch(() => {
                                  Swal.fire('Lỗi!', 'Không thể khôi phục khóa học.', 'error');
                              });
                      }
                  });
              });
          });
      
          // Delete permanently
          document.querySelectorAll('.btn-delete').forEach(function (btn) {
              btn.addEventListener('click', function () {
                  const courseId = btn.dataset.id;
                  Swal.fire({
                      title: 'Xóa vĩnh viễn?',
                      text: "Hành động này không thể hoàn tác!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonText: 'Xóa',
                      cancelButtonText: 'Hủy'
                  }).then((result) => {
                      if (result.isConfirmed) {
                          axios.delete('/course/delete/' + courseId + '/force')
                              .then(() => {
                                  Swal.fire({
                                      icon: 'success',
                                      title: 'Đã xóa vĩnh viễn',
                                      showConfirmButton: false,
                                      timer: 1500
                                  }).then(() => {
                                      location.reload();
                                  });
                              })
                              .catch(() => {
                                  Swal.fire('Lỗi!', 'Không thể xóa khóa học.', 'error');
                              });
                      }
                  });
              });
          });
      });
   </script>
</div>